using HarmonyLib;using System;using System.Linq;using StardewModdingAPI;using StardewValley;using StardewValley.Characters;using MyChildCore.Utilities;using Microsoft.Xna.Framework.Graphics;namespace MyChildTest{    public class ModEntry : Mod    {        public static ModEntry Instance { get; private set; }        private Harmony _harmony;        public override void Entry(IModHelper helper)        {            Instance = this;            CustomLogger.Init(Monitor);            helper.Events.GameLoop.SaveLoaded += (s, e) => ApplyTestAppearance();            helper.Events.GameLoop.DayStarted += (s, e) => ApplyTestAppearance();            helper.Events.Player.Warped += (s, e) => ApplyTestAppearance();            _harmony = new Harmony(ModManifest.UniqueID);            _harmony.Patch(                original: AccessTools.Method(typeof(Child), nameof(Child.reloadSprite)),                postfix: new HarmonyMethod(typeof(ModEntry), nameof(AfterChildSpriteUpdate))            );        }        private void ApplyTestAppearance()        {            // getChildren()은 NetCollection<Child>이므로 ToList() 필요!            var myChild = Game1.player.getChildren().ToList().FirstOrDefault();            if (myChild == null)            {                CustomLogger.Warn("내 자녀가 없습니다.");                return;            }            // 파일 경로로 외형 덮어씌우기            myChild.Sprite.LoadTexture("assets/baby.png");        }        public static void AfterChildSpriteUpdate(Child __instance)        {            var child = Game1.player.getChildren().ToList().FirstOrDefault();            if (__instance.Name == child?.Name && __instance.idOfParent.Value == child?.idOfParent.Value)            {                // 역시 파일 경로로 교체                __instance.Sprite.LoadTexture("assets/baby.png");            }        }    }}