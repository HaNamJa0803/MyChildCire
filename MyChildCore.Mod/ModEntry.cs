using HarmonyLib;using StardewModdingAPI;using StardewValley;using StardewValley.Characters;using MyChildCore.Utilities;using System.Linq;using Microsoft.Xna.Framework.Graphics;namespace MyChildCore.Main // ← 네임스페이스 충돌 주의{    public class ModEntry : Mod    {        private Harmony _harmony;        public override void Entry(IModHelper helper)        {            CustomLogger.Init(Monitor);            CacheManager.LoadAllFromJson();            // 외형 자동 적용: 세이브, 날짜 변경, 워프, NpcList 변화 등            helper.Events.GameLoop.SaveLoaded += (s, e) => ApplyAllChildrenAppearance();            helper.Events.GameLoop.DayStarted += (s, e) => ApplyAllChildrenAppearance();            helper.Events.Player.Warped += (s, e) => ApplyAllChildrenAppearance();            _harmony = new Harmony(ModManifest.UniqueID);            _harmony.Patch(                original: AccessTools.Method(typeof(Child), nameof(Child.reloadSprite)),                postfix: new HarmonyMethod(typeof(ModEntry), nameof(AfterChildSpriteUpdate))            );            Monitor.Log("[MyChildCore] 엔트리 진입/이벤트+하모니 패치 완료", LogLevel.Info);        }        // 자녀 외형 전체 적용(저장소/캐시 기반)        private void ApplyAllChildrenAppearance()        {            foreach (var child in ChildManager.GetChildrenByPlayer())            {                var data = CacheManager.GetMyChildData(child);                if (data != null)                {                    // 저장된 AppearanceKey, SkinTone 등 사용                    var path = $"assets/custom/{data.AppearanceKey ?? "default"}.png";                    var texture = Helper.ModContent.Load<Texture2D>(path);                    AppearanceManager.ApplyAppearance(child, texture);                    CustomLogger.Info($"자녀 {child.Name} 외형 적용 완료: {path}");                }                else                {                    CustomLogger.Warn($"자녀 {child.Name} 외형 데이터 없음(기본값 사용)");                }            }        }        // 하모니 패치: 자녀 스프라이트 리로드 시 외형 재적용        public static void AfterChildSpriteUpdate(Child __instance)        {            var data = CacheManager.GetMyChildData(__instance);            if (data != null)            {                var mod = (ModEntry)ModEntry.Instance;                var path = $"assets/custom/{data.AppearanceKey ?? "default"}.png";                var texture = mod.Helper.ModContent.Load<Texture2D>(path);                AppearanceManager.ApplyAppearance(__instance, texture);            }        }    }}