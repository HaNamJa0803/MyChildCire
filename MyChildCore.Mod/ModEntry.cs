using HarmonyLib;using System;using System.Linq;using StardewModdingAPI;using StardewValley;using StardewValley.Characters;using MyChildCore.Utilities;namespace MyChildTest{    public class ModEntry : Mod    {        public static ModEntry Instance { get; private set; }        private Harmony _harmony;        public override void Entry(IModHelper helper)        {            Instance = this;            CustomLogger.Init(Monitor);            // 주요 이벤트마다 외형 자동 적용 (세이브, 날짜 변경, 워프 등)            helper.Events.GameLoop.SaveLoaded += (s, e) => ApplyTestAppearance();            helper.Events.GameLoop.DayStarted += (s, e) => ApplyTestAppearance();            helper.Events.Player.Warped += (s, e) => ApplyTestAppearance();            // 하모니 패치: Child.reloadSprite 이후에도 덮어쓰기 (엔진이 Sprite 리셋할 때)            _harmony = new Harmony(ModManifest.UniqueID);            _harmony.Patch(                original: AccessTools.Method(typeof(Child), nameof(Child.reloadSprite)),                postfix: new HarmonyMethod(typeof(ModEntry), nameof(AfterChildSpriteUpdate))            );        }        private void ApplyTestAppearance()        {            // 실제 자녀 찾기 (유니크 칠드런 구조)            var myChild = Game1.player.getChildren().ToList().FirstOrDefault();            if (myChild == null)            {                CustomLogger.Warn("내 자녀가 없습니다.");                return;            }            // 파일 경로만 넣으면 SDV가 알아서 Content.Load<Texture2D> 처리            myChild.Sprite.LoadTexture("assets/baby.png");        }        public static void AfterChildSpriteUpdate(Child __instance)        {            var child = Game1.player.getChildren().ToList().FirstOrDefault();            if (__instance.Name == child?.Name && __instance.idOfParent.Value == child?.idOfParent.Value)            {                __instance.Sprite.LoadTexture("assets/baby.png");            }        }    }}