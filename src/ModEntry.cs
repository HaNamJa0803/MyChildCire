using StardewModdingAPI;using StardewModdingAPI.Events;using StardewValley;using MyChildCore.Utilities;using MyChildCore.GMCM;using System;namespace MyChildCore{    public class ModEntry : Mod    {        public static DropdownConfig Config;        private int lastSyncedDay = -1;        public override void Entry(IModHelper helper)        {            Config = new DropdownConfig();            // GMCM 연동            var gmcm = helper.ModRegistry.GetApi<IGenericModConfigMenuApi>("spacechase0.GenericModConfigMenu");            if (gmcm != null)            {                gmcm.Register(this, reset: () => Config = new DropdownConfig(), save: () => { /* 필요시 구현 */ });                GMCMSectionBuilder.BuildSections(gmcm, this, helper.Translation, Config, OnGMCMChanged);            }            // 이벤트 연결            helper.Events.GameLoop.SaveLoaded += OnSaveLoaded;            helper.Events.GameLoop.DayStarted += OnDayStarted;            helper.Events.Player.Warped += OnWarped;            helper.Events.Display.MenuChanged += OnMenuChanged;            helper.Events.GameLoop.Saved += OnSaved;            helper.Events.GameLoop.OneSecondUpdateTicked += OnOneSecondUpdateTicked;            // 콘솔 명령어            helper.ConsoleCommands.Add("applychild", "모든 자녀 외형 일괄 적용", ApplyAllChildren);            helper.ConsoleCommands.Add("backupchild", "자녀 데이터 백업", BackupChildren);            helper.ConsoleCommands.Add("restorechild", "자녀 백업 복구", RestoreChildren);        }        // ========== 이벤트 핸들러 ==========        private void OnSaveLoaded(object sender, SaveLoadedEventArgs e) => DataManager.ApplyAllAppearances(Config);        private void OnDayStarted(object sender, DayStartedEventArgs e)        {            DataManager.ApplyAllAppearances(Config);            lastSyncedDay = Game1.Date.TotalDays;        }        private void OnWarped(object sender, WarpedEventArgs e)        {            if (Context.IsMainPlayer && e.IsLocalPlayer)                DataManager.ApplyAllAppearances(Config);        }        private void OnMenuChanged(object sender, MenuChangedEventArgs e)        {            if (Context.IsWorldReady)                DataManager.ApplyAllAppearances(Config);        }        private void OnSaved(object sender, SavedEventArgs e) => DataManager.ApplyAllAppearances(Config);        private void OnOneSecondUpdateTicked(object sender, EventArgs e)        {            if (Game1.Date.TotalDays != lastSyncedDay)            {                DataManager.SyncFromDisk();                lastSyncedDay = Game1.Date.TotalDays;                CustomLogger.Info("외부 저장소와 동기화 완료");            }        }        // GMCM 옵션 변경시 외형 실시간 적용 콜백        public static void OnGMCMChanged(string spouse, bool isMale)        {            AppearanceManager.ApplyForGMCMChange(spouse, isMale, Config);            CustomLogger.Info($"GMCM 변경: {spouse}, {(isMale ? "남" : "여")} 즉시 반영");        }        // ===== 콘솔 명령 =====        private void ApplyAllChildren(string cmd, string[] args)        {            DataManager.ApplyAllAppearances(Config);            CustomLogger.Info("모든 자녀 외형 일괄 적용 완료!");        }        private void BackupChildren(string cmd, string[] args)        {            DataManager.Backup();            CustomLogger.Info("자녀 데이터 백업 완료!");        }        private void RestoreChildren(string cmd, string[] args)        {            DataManager.RestoreLatestBackup();            DataManager.ApplyAllAppearances(Config);            CustomLogger.Info("자녀 데이터 백업 복구 및 적용 완료!");        }    }}