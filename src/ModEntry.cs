using StardewModdingAPI;using StardewModdingAPI.Events;using GenericModConfigMenu;using StardewValley;using System;using System.Collections.Generic;using Microsoft.Xna.Framework;using Microsoft.Xna.Framework.Graphics;namespace MyChildCore{    public class ModEntry : Mod    {        public static ModConfig Config;        private static int lastSyncedDay = -1;        public override void Entry(IModHelper helper)        {            Config = new ModConfig();            // GMCM 연동            helper.Events.GameLoop.GameLaunched += OnGameLaunched;            // 게임 이벤트 등록            helper.Events.GameLoop.SaveLoaded   += OnSaveLoaded;            helper.Events.GameLoop.DayStarted   += OnDayStarted;            helper.Events.Player.Warped         += OnWarped;            helper.Events.Display.MenuChanged   += OnMenuChanged;            helper.Events.GameLoop.Saved        += OnSaved;            helper.Events.GameLoop.OneSecondUpdateTicked += OnOneSecondUpdateTicked;            // 콘솔 명령 등록            helper.ConsoleCommands.Add("applychild", "모든 자녀 외형 일괄 적용", ApplyAllChildren);            helper.ConsoleCommands.Add("backupchild", "자녀 데이터 백업", BackupChildren);            helper.ConsoleCommands.Add("restorechild", "자녀 백업 복구", RestoreChildren);        }        private void OnGameLaunched(object sender, GameLaunchedEventArgs e)        {            var gmcm = Helper.ModRegistry.GetApi<IGenericModConfigMenuApi>("spacechase0.GenericModConfigMenu");            if (gmcm == null)            {                Monitor.Log("GMCM 연동 실패! GMCM 설치 여부 확인", LogLevel.Warn);                return;            }            gmcm.Register(                mod: ModManifest,                reset: () => Config = new ModConfig(),                save: () => { }            );            // ────────── 글로벌 옵션 3개 ──────────            gmcm.AddBoolOption(                mod: ModManifest,                name: delegate { return "모드 활성화"; },                tooltip: delegate { return "모드를 켭니다."; },                getValue: delegate { return Config.EnableMod; },                setValue: delegate (bool v) { Config.EnableMod = v; }            );            gmcm.AddBoolOption(                mod: ModManifest,                name: delegate { return "잠옷 활성화"; },                tooltip: delegate { return "잠옷 기능을 켭니다."; },                getValue: delegate { return Config.EnablePajama; },                setValue: delegate (bool v) { Config.EnablePajama = v; }            );            gmcm.AddBoolOption(                mod: ModManifest,                name: delegate { return "축제복 활성화"; },                tooltip: delegate { return "축제복 기능을 켭니다."; },                getValue: delegate { return Config.EnableFestival; },                setValue: delegate (bool v) { Config.EnableFestival = v; }            );            // ────────── 구분선 ──────────            gmcm.AddSectionTitle(                mod: ModManifest,                text: delegate { return "──────────────"; },                tooltip: null            );            // ────────── 배우자 17명 목록 버튼 + 클릭시 커스텀 UI 진입 ──────────            foreach (string spouse in DropdownConfig.SpouseNames)            {                gmcm.AddComplexOption(                    mod: ModManifest,                    name: delegate { return spouse; },                    tooltip: delegate { return spouse + " 자녀 설정 창으로 이동"; },                    draw: delegate (SpriteBatch b, Vector2 pos)                    {                        // 버튼 텍스트 출력 (스타듀 기본 소형 폰트)                        b.DrawString(Game1.smallFont, spouse + " (이동)", pos, Color.White);                        // 클릭 감지                        var btnRect = new Rectangle((int)pos.X, (int)pos.Y, 180, 32);                        if (Utility.isWithinBounds(Game1.getMouseX(), Game1.getMouseY(), btnRect.X, btnRect.Y, btnRect.Width, btnRect.Height)                            && Game1.input.GetMouseState().LeftButton == Microsoft.Xna.Framework.Input.ButtonState.Pressed)                        {                            Game1.playSound("smallSelect");                            Game1.activeClickableMenu = new MyChildCore.UI.ChildConfigMenu(                                DropdownConfig.SpouseNames,                                null,      // onClose                                spouse     // 선택된 배우자                            );                        }                    }                );            }        }        // === 게임 이벤트 ===        private void OnSaveLoaded(object sender, SaveLoadedEventArgs e)        {            DataManager.ApplyAllAppearances(Config);        }        private void OnDayStarted(object sender, DayStartedEventArgs e)        {            DataManager.ApplyAllAppearances(Config);            lastSyncedDay = Game1.Date.TotalDays;        }        private void OnWarped(object sender, WarpedEventArgs e)        {            if (Context.IsMainPlayer && e.IsLocalPlayer)                DataManager.ApplyAllAppearances(Config);        }        private void OnMenuChanged(object sender, MenuChangedEventArgs e)        {            if (Context.IsWorldReady)                DataManager.ApplyAllAppearances(Config);        }        private void OnSaved(object sender, SavedEventArgs e)        {            DataManager.ApplyAllAppearances(Config);        }        private void OnOneSecondUpdateTicked(object sender, EventArgs e)        {            if (Game1.Date.TotalDays != lastSyncedDay)            {                DataManager.SyncFromDisk();                lastSyncedDay = Game1.Date.TotalDays;                CustomLogger.Info("외부 저장소와 동기화 완료");            }        }        // === 콘솔 명령어 ===        private static void ApplyAllChildren(string cmd, string[] args)            => DataManager.ApplyAllAppearances(Config);        private static void BackupChildren(string cmd, string[] args)            => DataManager.Backup();        private static void RestoreChildren(string cmd, string[] args)        {            DataManager.RestoreLatestBackup();            DataManager.ApplyAllAppearances(Config);        }        // === GMCM 옵션 변경 콜백 ===        public static void OnGMCMChanged(string spouse, bool isBoy)        {            AppearanceManager.ApplyForGMCMChange(spouse, isBoy, Config);            DataManager.SaveData(CacheManager.GetChildCache());        }    }}